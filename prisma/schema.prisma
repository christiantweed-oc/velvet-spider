// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Client {
  id        String     @id() @default(uuid()) @db.VarChar(36)
  name      String     @db.VarChar(255)
  slug      String     @unique() @db.VarChar(255)
  email     String     @db.VarChar(36)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  appConfig AppConfig?
  tables    Table[]
  statuses  Status[]
  workflows Workflow[]

  @@index([name])
}

model AppConfig {
  id              String   @id() @default(uuid()) @db.VarChar(36)
  requestPageSize Int      @db.Int()
  landingPage     String   @db.VarChar(255)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @default(now())
  clientId        String   @unique() @db.VarChar(255)
  client          Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)
}

model Table {
  id           String        @id() @default(uuid()) @db.VarChar(36)
  name         String        @db.VarChar(255)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  clientId     String        @db.VarChar(255)
  workflowId   String        @db.VarChar(255)
  client       Client        @relation(fields: [clientId], references: [id], onDelete: Cascade)
  tableColumns TableColumn[]
  workFlow     Workflow      @relation(fields: [workflowId], references: [id], onDelete: Cascade)
}

model TableColumn {
  columnId  String   @db.VarChar(36)
  tableId   String   @db.VarChar(36)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  Table  Table  @relation(fields: [tableId], references: [id], onDelete: Cascade)
  Column Column @relation(fields: [columnId], references: [id], onDelete: Cascade)

  @@unique([columnId, tableId])
}

model Column {
  id           String        @id() @default(uuid()) @db.VarChar(36)
  field        String        @db.VarChar(255)
  name         String        @db.VarChar(255)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  overrides    Json?
  tableColumns TableColumn[]
}

model Status {
  id               String           @id() @default(uuid()) @db.VarChar(36)
  name             String           @db.VarChar(255)
  key              String           @unique @db.VarChar(255)
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @default(now())
  clientId         String           @db.VarChar(255)
  client           Client           @relation(fields: [clientId], references: [id], onDelete: Cascade)
  workFlowStatuses WorkFlowStatus[]
}

model Workflow {
  id               String           @id() @default(uuid()) @db.VarChar(36)
  name             String           @db.VarChar(255)
  key              String           @unique() @db.VarChar(255)
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @default(now())
  clientId         String           @db.VarChar(255)
  client           Client           @relation(fields: [clientId], references: [id], onDelete: Cascade)
  workFlowStatuses WorkFlowStatus[]
  tables           Table[]
}

model WorkFlowStatus {
  statusId   String   @db.VarChar(36)
  workflowId String   @db.VarChar(36)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())

  status   Status   @relation(fields: [statusId], references: [id], onDelete: Cascade)
  workFlow Workflow @relation(fields: [workflowId], references: [id], onDelete: Cascade)

  @@unique([statusId, workflowId])
}
